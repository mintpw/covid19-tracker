{"version":3,"sources":["font/Rubik-Regular.ttf","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Charts.module.css","components/CountryPicker/CountryPicker.module.css","image/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","iconStyle","icon","faViruses","size","fontStyle","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","faNotesMedical","faSkullCrossbones","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dialyData","total","date","reportDate","slice","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","fill","borderColor","backgroundColor","borderWidth","pointStyle","options","legend","fontColor","fontFamily","tooltips","mode","scales","yAxes","ticks","beginAtZero","padding","gridLines","display","color","xAxes","barChart","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","alt","credit","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96e08def.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rubik-Regular.b3d0902b.ttf\";","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faViruses, faNotesMedical, faSkullCrossbones } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => { \r\n\r\n    if(!confirmed){\r\n        return 'Loading..';\r\n    } \r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\" >\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography className={styles.iconStyle}><FontAwesomeIcon icon={faViruses} size='3x'/></Typography>\r\n                        <Typography className={styles.fontStyle} gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" className={styles.fontStyle}>\r\n                            <CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography className={styles.fontStyle}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography className={styles.iconStyle}><FontAwesomeIcon icon={faNotesMedical} size='3x'/></Typography>\r\n                        <Typography className={styles.fontStyle} gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" className={styles.fontStyle}><CountUp start={0} end={recovered.value} duration={1.5} separator=\",\"/></Typography>\r\n                        <Typography className={styles.fontStyle}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography className={styles.iconStyle}><FontAwesomeIcon icon={faSkullCrossbones} size='3x'/></Typography>\r\n                        <Typography className={styles.fontStyle} gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\" className={styles.fontStyle}><CountUp start={0} end={deaths.value} duration={1.5} separator=\",\"/></Typography>\r\n                        <Typography className={styles.fontStyle}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } \r\n    catch (error) {\r\n        console.log(error)        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dialyData) => ({\r\n            confirmed: dialyData.confirmed.total,\r\n            deaths: dialyData.deaths.total,\r\n            date: dialyData.reportDate\r\n        }));\r\n\r\n        return modifiedData.slice(-30);\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`)\r\n        \r\n        return countries.map((country)=>country.name)\r\n    } catch (error) {\r\n        console.log(error)        \r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n             setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (            \r\n            <Line\r\n                data={{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    fill: true,\r\n                    borderColor: '#3949ab',\r\n                    backgroundColor: 'rgba(0, 255, 255, 0.4)',\r\n                    borderWidth: 3,\r\n                    pointStyle: 'star', \r\n                },                 \r\n                {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    fill: true,                    \r\n                    borderColor: '#a02725',\r\n                    backgroundColor: 'rgba(255, 0, 0)',\r\n                    borderWidth: 3,\r\n                    pointStyle: 'star',                    \r\n                }]                         \r\n            }}\r\n            options = {{\r\n                legend: {labels:{fontColor:'#FFBC00', fontFamily:'Rubik'}},\r\n                tooltips: {mode:'point'},                \r\n                scales: {yAxes:[{\r\n                    ticks:{\r\n                        fontColor: '#FFBC00',\r\n                        fontFamily: 'Rubik',\r\n                        beginAtZero: true,                    \r\n                        padding: 20\r\n                    },\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: '#9DBAC9'                        \r\n                    }\r\n                }],\r\n                xAxes:[{\r\n                    ticks:{\r\n                        fontColor: '#FFBC00',\r\n                        fontFamily: 'Rubik',\r\n                        padding: 10,\r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                    }\r\n                }]\r\n            }\r\n            }}  \r\n            />            \r\n        ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'people',\r\n                        backgroundColor: ['#1976d2','#81c784','#d32f2f'],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`, fontColor:'#FFBC00'},\r\n                    scales: {yAxes:[{\r\n                        ticks:{\r\n                            fontColor: '#FFBC00',\r\n                            fontFamily: 'Rubik',\r\n                            beginAtZero: true,                    \r\n                            padding: 20\r\n                        },\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: '#9DBAC9'                        \r\n                        }\r\n                    }],\r\n                    xAxes:[{\r\n                        ticks:{\r\n                            fontColor: '#FFBC00',\r\n                            fontFamily: 'Rubik',\r\n                            padding: 10,\r\n                        },\r\n                        gridLines: {\r\n                            display: false,\r\n                        }\r\n                    }]\r\n                }\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport {fetchCountries} from '../../api'\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI(); \r\n    }, [setFetchedCountries]);\r\n\r\n    console.log(fetchedCountries);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport {fetchData} from './api';\r\nimport image from './image/image.png';\r\nimport styles from './App.module.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n        const {data, country} = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange ={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                <div className={styles.credit}><span>Github⚡</span> <a target=\"_blank\" href=\"https://github.com/mintpw\">mintpw</a></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport './font/Rubik-Regular.ttf';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__BtuMS\",\"image\":\"App_image__vc0hY\",\"credit\":\"App_credit__31IF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3lCkG\",\"card\":\"Cards_card__K76vK\",\"iconStyle\":\"Cards_iconStyle__1HCEB\",\"fontStyle\":\"Cards_fontStyle__2Didy\",\"infected\":\"Cards_infected__1HWfS\",\"recovered\":\"Cards_recovered__1c5g5\",\"deaths\":\"Cards_deaths__3x0vP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3AL3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__cqLQu\"};","module.exports = __webpack_public_path__ + \"static/media/image.d3c26e59.png\";"],"sourceRoot":""}